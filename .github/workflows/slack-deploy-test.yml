name: Slack Alert Deploy

on:
  pull_request:
    types: [opened]
    branches:
      - main

env:
  channel: '#dev_slack_notification'

jobs:
  get-env:
    runs-on: ubuntu-latest
    steps:
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:pr_id
          repository: ${{ github.repository }}
          pr_id: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
#
#      - name: full
#        id: full
#        run: echo "${{ steps.get_pull_request_ref.outputs.data }}"
#
#      - name: pr_num
#        id: full2
#        run: echo "${{ github.event.pull_request.number }}"
#
#      - name: schedule
#        id: schedule
#        run: echo "${{ fromJson(steps.get_pull_request_ref.outputs.data).created_at }}"
#
#      - name: release_version
#        id: release_version
#        run: echo "${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}"
#
#      - name: milestones
#        id: milestones
#        run: echo "${{ fromJson(steps.get_pull_request_ref.outputs.data).milestone.url }}"
#
#      - name: driver
#        id: driver
#        run: echo "${{ fromJson(steps.get_pull_request_ref.outputs.data).assignee.login }}"
#
#      - name: milestone_title
#        id: vars
#        run: echo "::set-output name=milestone_title::${{ fromJson(steps.get_pull_request_ref.outputs.data).milestone.title }}"
#

      - name: get pull request ref2
        id: get_pull_request_ref2
        uses: octokit/request-action@v2.x
        with:
#          route: GET /search/issues?q=milestone:milestone_title+type:pr+repo:repository
#          repository: ${{ github.repository }}
#          milestone_title: ${{ steps.vars.outputs.milestone_title }}
          route: GET /search/issues
#          milestone_title: ${{ fromJson(steps.get_pull_request_ref.outputs.data).milestone.title }}
#          repository: ${{ github.repository }}
          q: milestone:${{ fromJson(steps.get_pull_request_ref.outputs.data).milestone.title }}+type:pr+repo:${{ github.repository }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"


      - name: vars
        id: vars
        run: echo '::set-output name=full::${{ steps.get_pull_request_ref2.outputs.data }}'

      - name: get full
        id: full2
        env:
          FULL: ${{ steps.vars.outputs.full }}
        run: $FULL

      - name: get full
        id: full3
        env:
          FULL: ${{ steps.vars.outputs.full }}
        run: $FULL.titles